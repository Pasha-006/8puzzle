d1={1:1,2:2,3:3,4:0,5:4,6:6,7:7,8:5,9:8}
f={1:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:0}
print("Intial State                      final state")
print(d1[1],"|",d1[2],"|",d1[3],"                          ",f[1],"|",f[2],"|",f[3],)
print("_","_","_","_","_","                         ","_","_","_","_","_","_")
print(d1[4],"|",d1[5],"|",d1[6],"                          ",f[4],"|",f[5],"|",f[6])
print("_","_","_","_","_","                         ","_","_","_","_","_","_")
print(d1[7],"|",d1[8],"|",d1[9],"                          ",f[7],"|",f[8],"|",f[9])
print()
print()

def cost():
    c=0
    for i in range(1,10):
        if d1[i]!=f[i]:
            c+=1
    return c
def printf():
    print(d1[1],"|",d1[2],"|",d1[3])
    print("_","_","_","_","_")
    print(d1[4],"|",d1[5],"|",d1[6])
    print("_","_","_","_","_")
    print(d1[7],"|",d1[8],"|",d1[9])
    print()
    print(" "," ","||"," "," ")
    print(" "," ","||"," "," ")
    print(" "," ","\/"," "," ")
    
    print()
    print()
    
    
def find():
    c1=0
    if d1[1]==0:
        d1[1],d1[4]=d1[4],d1[1]
        c1=cost()
        d1[1],d1[4]=d1[4],d1[1]
        d1[1],d1[2]=d1[2],d1[1]
        c2=cost()
        d1[1],d1[2]=d1[2],d1[1]
        if c1>c2:
            d1[1],d1[2]=d1[2],d1[1]
        else:
             d1[1],d1[4]=d1[4],d1[1]
    elif d1[2]==0:
        d1[2],d1[1]=d[1],d1[2]
        c1=cost()
        d1[2],d1[1]=d[1],d1[2]
        d1[2],d1[3]=d1[3],d1[2]
        c2=cost()
        d1[2],d1[3]=d1[3],d1[2]
        d1[2],d1[5]=d1[5],d1[2]
        c3=cost()
        d1[2],d1[5]=d1[5],d1[2]
        move=min(c1,c2,c3)
        if move==c1:
            d1[2],d1[1]=d[1],d1[2]
        elif move==c2:
            1[2],d1[3]=d1[3],d1[2]
        else:
            d1[2],d1[5]=d1[5],d1[2]
    elif d1[3]==0:
        print("gello")
        d1[3],d1[2]=d1[2],d1[3]
        c1=cost()
        d1[3],d1[2]=d1[2],d1[3]
        d1[3],d1[6]=d1[6],d1[3]
        c2=cost()
        d1[3],d1[6]=d1[6],d1[3]
        move=min(c1,c2)
        if move==c1:
            d1[3],d1[2]=d1[2],d1[3]
        else:
            d1[3],d1[6]=d1[6],d1[3]
    elif d1[4]==0:
        d1[4],d1[1]=d1[1],d1[4]
        c1=cost()
        d1[4],d1[1]=d1[1],d1[4]
        d1[4],d1[7]=d1[7],d1[4]
        c2=cost()
        d1[4],d1[7]=d1[7],d1[4]
        d1[4],d1[5]=d1[5],d1[4]
        c3=cost()
        d1[4],d1[5]=d1[5],d1[4]
        move=min(c1,c2,c3)
        if move==c1:
            d1[4],d1[1]=d1[1],d1[4]
        elif move==c2:
            d1[4],d1[7]=d1[7],d1[4]
        else:
            d1[4],d1[5]=d1[5],d1[4]
    elif d1[5]==0:
        d1[5],d1[2]=d1[2],d1[5]
        c1=cost()
        d1[5],d1[2]=d1[2],d1[5]
        d1[5],d1[4]=d1[4],d1[5]
        c2=cost()
        d1[5],d1[4]=d1[4],d1[5]
        d1[5],d1[8]=d1[8],d1[5]
        c3=cost()
        d1[5],d1[8]=d1[8],d1[5]
        d1[5],d1[6]=d1[6],d1[5]
        c4=cost()
        d1[5],d1[6]=d1[6],d1[5]
        move=min(c1,c2,c3,c4)
        if move==c1:
            d1[5],d1[2]=d1[2],d1[5]
        elif move==c2:
            d1[5],d1[4]=d1[4],d1[5]
        elif move==c3:
            d1[5],d1[8]=d1[8],d1[5]
        else:
            d1[5],d1[6]=d1[6],d1[5]
    elif d1[6]==0:
        d1[6],d1[5]=d1[6],d1[5]
        c1=cost()
        d1[5],d1[6]=d1[6],d1[5]
        d1[6],d1[9]=d1[9],d1[6]
        c2=cost()
        d1[6],d1[9]=d1[9],d1[6]
        d1[6],d1[3]=d1[3],d1[6]
        c3=cost()
        d1[6],d1[3]=d1[3],d1[6]
        move=min(c1,c2,c3)
        if move==c1:
            d1[5],d1[6]=d1[6],d1[5]
        elif move==c2:
            d1[6],d1[9]=d1[9],d1[6]
        else:
            d1[6],d1[3]=d1[3],d1[6]
    elif d1[7]==0:
         d1[7],d1[4]=d1[4],d1[7]
         c1=cost()
         d1[7],d1[4]=d1[4],d1[7]
         d1[7],d1[8]=d1[8],d1[7]
         c2=cost()
         d1[7],d1[8]=d1[8],d1[7]
         move=cost(c1,c2)
         if move==c1:
             d1[7],d1[4]=d1[4],d1[7]
         else:
             d1[7],d1[8]=d1[8],d1[7]
    elif d1[8]==0:
        d1[8],d1[5]=d1[5],d1[8]
        c1=cost()
        d1[8],d1[5]=d1[5],d1[8]
        d1[8],d1[7]=d1[7],d1[8]
        c2=cost()
        d1[8],d1[7]=d1[7],d1[8]
        d1[8],d1[9]=d1[9],d1[8]
        c3=cost()
        d1[8],d1[9]=d1[9],d1[8]
        move=min(c1,c2,c3)
        if move==c1:
            d1[8],d1[5]=d1[5],d1[8]
        elif move==c2:
            d1[8],d1[7]=d1[7],d1[8]
        else:
            d1[8],d1[9]=d1[9],d1[8]
    elif d1[9]==0:
        d1[9],d1[6]=d1[6],d1[9]
        c1=cost()
        d1[9],d1[6]=d1[6],d1[9]
        d1[9],d1[8]=d1[8],d1[9]
        c2=cost()
        d1[9],d1[8]=d1[8],d1[9]
        z=min(c1,c2)
        if z==c1:
            d1[9],d1[6]=d1[6],d1[9]
        else:
            d1[9],d1[8]=d1[8],d1[9]
            
            
        
            
            
            
        
        
printf()     
while (d1==f)==False:
    find()
    printf()







    
